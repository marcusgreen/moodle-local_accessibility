{"version":3,"file":"colour.min.js","sources":["../src/colour.js"],"sourcesContent":["import { saveOptionConfig } from './common';\nimport $ from 'jquery';\n\nexport const init = (optionname, stylename) => {\n    $(() => {\n        const optionshortname = /^accessibility_(.*)$/.exec(optionname)[1];\n        const revokedefault = () => {\n            $('body').removeClass(optionname);\n        };\n\n        const defaultattrname = `data-default-${stylename}`;\n        const $container = $(`#${optionname}-container`);\n        if (!$container.length) {\n            return;\n        }\n\n        const $picker = $container.find(`#${optionname}-picker`);\n        if (!$picker.length) {\n            return;\n        }\n        $picker.on('change input propertychange', async() => {\n            const colour = $picker.val();\n            if (!colour) {\n                return;\n            }\n            if (!/#[0-9a-f]{6}/gi.exec(colour)) {\n                return;\n            }\n            revokedefault();\n            for (const element of [...$('*')]) {\n                const $element = $(element);\n                if (!$element.attr(defaultattrname)) {\n                    $element.attr(defaultattrname, $element.css(stylename));\n                }\n                $element.css(stylename, colour);\n            }\n            await saveOptionConfig(optionshortname, colour);\n        });\n\n        const $img = $container.find('img.colourdialogue');\n        if ($img.length) {\n            $img.on('click', () => {\n                $picker.trigger('change');\n            });\n        }\n\n        const $resetbtn = $container.find(`.${optionname}-resetbtn`);\n        if ($resetbtn.length) {\n            $resetbtn.on('click', async() => {\n                $picker.val('');\n                revokedefault();\n                for (const element of [...$('*')]) {\n                    const $element = $(element);\n                    const defaultcolour = $element.attr(defaultattrname) ?? '';\n                    $element.css(stylename, defaultcolour);\n                    $element.removeAttr(defaultattrname);\n                }\n                await saveOptionConfig(optionshortname, null);\n            });\n        }\n    });\n};\n"],"names":["optionname","stylename","optionshortname","exec","revokedefault","removeClass","defaultattrname","$container","length","$picker","find","on","async","colour","val","element","$element","attr","css","$img","trigger","$resetbtn","defaultcolour","removeAttr"],"mappings":"mQAGoB,CAACA,WAAYC,kCAC3B,WACQC,gBAAkB,uBAAuBC,KAAKH,YAAY,GAC1DI,cAAgB,yBAChB,QAAQC,YAAYL,aAGpBM,uCAAkCL,WAClCM,YAAa,8BAAMP,8BACpBO,WAAWC,oBAIVC,QAAUF,WAAWG,gBAASV,2BAC/BS,QAAQD,cAGbC,QAAQE,GAAG,+BAA+BC,gBAChCC,OAASJ,QAAQK,SAClBD,QAGA,iBAAiBV,KAAKU,SAG3BT,oBACK,MAAMW,UAAW,KAAI,mBAAE,MAAO,OACzBC,UAAW,mBAAED,SACdC,SAASC,KAAKX,kBACfU,SAASC,KAAKX,gBAAiBU,SAASE,IAAIjB,YAEhDe,SAASE,IAAIjB,UAAWY,cAEtB,4BAAiBX,gBAAiBW,kBAGtCM,KAAOZ,WAAWG,KAAK,sBACzBS,KAAKX,QACLW,KAAKR,GAAG,SAAS,KACbF,QAAQW,QAAQ,mBAIlBC,UAAYd,WAAWG,gBAASV,yBAClCqB,UAAUb,QACVa,UAAUV,GAAG,SAASC,UAClBH,QAAQK,IAAI,IACZV,oBACK,MAAMW,UAAW,KAAI,mBAAE,MAAO,0BACzBC,UAAW,mBAAED,SACbO,qCAAgBN,SAASC,KAAKX,0DAAoB,GACxDU,SAASE,IAAIjB,UAAWqB,eACxBN,SAASO,WAAWjB,uBAElB,4BAAiBJ,gBAAiB"}