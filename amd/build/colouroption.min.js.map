{"version":3,"file":"colouroption.min.js","sources":["../src/colouroption.js"],"sourcesContent":["import { saveOptionConfig } from './common';\nimport $ from 'jquery';\n\nexport const init = (optionname, saveoptionname, stylename, bodyclassname = undefined) => {\n    $(() => {\n        const revokedefault = () => {\n            if (bodyclassname) {\n                $('body').removeClass(bodyclassname);\n            }\n        };\n\n        const defaultattrname = `data-default-${stylename}`;\n        const $container = $(`#${optionname}-container`);\n        if (!$container.length) {\n            return;\n        }\n\n        const $picker = $container.find(`#${optionname}-picker`);\n        if (!$picker.length) {\n            return;\n        }\n        $picker.on('change input propertychange', async() => {\n            const colour = $picker.val();\n            if (!colour) {\n                return;\n            }\n            if (!/#[0-9a-f]{6}/gi.exec(colour)) {\n                return;\n            }\n            revokedefault();\n            for (const element of [...$('*')]) {\n                const $element = $(element);\n                if (!$element.attr(defaultattrname)) {\n                    $element.attr(defaultattrname, $element.css(stylename));\n                }\n                $element.css(stylename, colour);\n            }\n            await saveOptionConfig(saveoptionname, colour);\n        });\n\n        const $img = $container.find('img.colourdialogue');\n        if ($img.length) {\n            $img.on('click', () => {\n                $picker.trigger('change');\n            });\n        }\n\n        const $resetbtn = $container.find(`.${optionname}-resetbtn`);\n        if ($resetbtn.length) {\n            $resetbtn.on('click', async() => {\n                $picker.val('');\n                revokedefault();\n                for (const element of [...$('*')]) {\n                    const $element = $(element);\n                    const defaultcolour = $element.attr(defaultattrname) ?? '';\n                    $element.css(stylename, defaultcolour);\n                    $element.removeAttr(defaultattrname);\n                }\n                await saveOptionConfig(saveoptionname, null);\n            });\n        }\n    });\n};\n"],"names":["optionname","saveoptionname","stylename","bodyclassname","undefined","revokedefault","removeClass","defaultattrname","$container","length","$picker","find","on","async","colour","val","exec","element","$element","attr","css","$img","trigger","$resetbtn","defaultcolour","removeAttr"],"mappings":"yQAGoB,SAACA,WAAYC,eAAgBC,eAAWC,0EAAgBC,uBACtE,WACQC,cAAgB,KACdF,mCACE,QAAQG,YAAYH,gBAIxBI,uCAAkCL,WAClCM,YAAa,8BAAMR,8BACpBQ,WAAWC,oBAIVC,QAAUF,WAAWG,gBAASX,2BAC/BU,QAAQD,cAGbC,QAAQE,GAAG,+BAA+BC,gBAChCC,OAASJ,QAAQK,SAClBD,QAGA,iBAAiBE,KAAKF,SAG3BT,oBACK,MAAMY,UAAW,KAAI,mBAAE,MAAO,OACzBC,UAAW,mBAAED,SACdC,SAASC,KAAKZ,kBACfW,SAASC,KAAKZ,gBAAiBW,SAASE,IAAIlB,YAEhDgB,SAASE,IAAIlB,UAAWY,cAEtB,4BAAiBb,eAAgBa,kBAGrCO,KAAOb,WAAWG,KAAK,sBACzBU,KAAKZ,QACLY,KAAKT,GAAG,SAAS,KACbF,QAAQY,QAAQ,mBAIlBC,UAAYf,WAAWG,gBAASX,yBAClCuB,UAAUd,QACVc,UAAUX,GAAG,SAASC,UAClBH,QAAQK,IAAI,IACZV,oBACK,MAAMY,UAAW,KAAI,mBAAE,MAAO,0BACzBC,UAAW,mBAAED,SACbO,qCAAgBN,SAASC,KAAKZ,0DAAoB,GACxDW,SAASE,IAAIlB,UAAWsB,eACxBN,SAASO,WAAWlB,uBAElB,4BAAiBN,eAAgB"}